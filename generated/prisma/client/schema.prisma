// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  ulid          String    @unique
  name          String?
  email         String?
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relationships
  lists     List[]
  tasks     Task[]
  analytics Analytics[]

  // Indexes for better search and performance
  @@index([createdAt])
}

model List {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  userUlid String
  user     User   @relation(fields: [userUlid], references: [ulid], onDelete: Cascade)
  tasks    Task[]

  // Indexes
  @@index([userUlid])
  @@index([createdAt])
  @@index([isPublic])
}

model Task {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    Priority   @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relationships
  userUlid String
  user     User   @relation(fields: [userUlid], references: [ulid], onDelete: Cascade)
  listId   String @db.ObjectId
  list     List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([userUlid])
  @@index([listId])
  @@index([status])
  @@index([priority])
  @@index([dueDate])
  @@index([createdAt])
}

model Analytics {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  event     String
  metadata  Json?
  createdAt DateTime @default(now())

  // Relationships
  userUlid String
  user     User   @relation(fields: [userUlid], references: [ulid], onDelete: Cascade)

  // Indexes
  @@index([userUlid])
  @@index([event])
  @@index([createdAt])
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
